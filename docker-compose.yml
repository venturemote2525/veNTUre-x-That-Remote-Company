version: '3.8'

services:
  nutrition-analysis:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    image: food-nutrition-analysis:latest
    container_name: nutrition-analysis-app
    restart: unless-stopped
    
    ports:
      - "8501:8501"  # Streamlit nutrition analysis app
    
    volumes:
      # Model checkpoints (mount your trained models)
      - ./src/segmentation/mask_rcnn/training/checkpoints:/app/src/segmentation/mask_rcnn/training/checkpoints:ro
      # Optional: mount dataset for batch processing
      - ./src/segmentation/mask_rcnn/datasets:/app/src/segmentation/mask_rcnn/datasets:ro
      - ./data:/app/data:ro
      
      # Output directories (writable)
      - nutrition_outputs:/app/outputs
      - nutrition_temp:/app/temp
      - nutrition_logs:/app/logs
      
      # Cache directories for model downloads (persistent)
      - model_cache:/app/.cache
    
    environment:
      # Model configuration
      - DEPTH_ENCODER=vitb
      - CONFIDENCE_THRESHOLD=0.5
      - USE_SPECIFIC_CLASSIFIER=false
      - DEVICE=cuda  # Change to 'cpu' if no GPU
      
      # Cache and storage
      - TORCH_HOME=/app/.cache/torch
      - HF_HOME=/app/.cache/huggingface
      - MODEL_CACHE_DIR=/app/.cache/models
      
      # Streamlit configuration
      - STREAMLIT_SERVER_HEADLESS=true
      - STREAMLIT_SERVER_ENABLE_CORS=false
      - STREAMLIT_SERVER_ENABLE_XSRF_PROTECTION=false
      
      # Optional: API keys for external services
      # - HUGGINGFACE_API_TOKEN=your_token_here
    
    # GPU support (uncomment if using GPU)
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 2m
    
    labels:
      - "com.docker.compose.project=food-nutrition-analysis"
      - "service.name=nutrition-analysis"
      - "service.version=1.0.0"

  # Optional: Database for storing analysis results
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: nutrition-db
  #   restart: unless-stopped
  #   
  #   environment:
  #     POSTGRES_DB: nutrition_analysis
  #     POSTGRES_USER: nutrition_user
  #     POSTGRES_PASSWORD: secure_password
  #   
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   
  #   ports:
  #     - "5432:5432"

  # Optional: Redis for caching analysis results
  # redis:
  #   image: redis:7-alpine
  #   container_name: nutrition-cache
  #   restart: unless-stopped
  #   
  #   volumes:
  #     - redis_data:/data
  #   
  #   ports:
  #     - "6379:6379"

  # Optional: Nginx reverse proxy for production
  # nginx:
  #   image: nginx:alpine
  #   container_name: nutrition-proxy
  #   restart: unless-stopped
  #   
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./ssl:/etc/nginx/ssl:ro
  #   
  #   depends_on:
  #     - nutrition-analysis

# Named volumes for persistent data
volumes:
  nutrition_outputs:
    driver: local
  nutrition_temp:
    driver: local
  nutrition_logs:
    driver: local
  model_cache:
    driver: local
    
  # Uncomment if using optional services
  # postgres_data:
  #   driver: local
  # redis_data:
  #   driver: local

# Networks for service communication
networks:
  default:
    name: nutrition-network
    driver: bridge
